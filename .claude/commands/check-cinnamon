#!/bin/bash

# check-cinnamon - Cinnamonサーバー包括監視コマンド
# 停止コンテナの詳細分析と完了率の理由解析を含む

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

echo "=== CINNAMON SERVER COMPREHENSIVE CHECK ==="
echo "Timestamp: $(date '+%Y-%m-%d %H:%M:%S')"
echo

# 1. コンテナ状態の詳細分析
echo "📊 CONTAINER STATUS ANALYSIS"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# 全コンテナ状態取得
CONTAINER_STATUS=$(ssh Cinnamon "docker ps -a --filter 'name=bulk-block-users' --format 'table {{.Names}}\t{{.Status}}\t{{.State}}'")

echo "🔍 Full Container Status:"
echo "$CONTAINER_STATUS"
echo

# 稼働中と停止中の分類
RUNNING_CONTAINERS=$(ssh Cinnamon "docker ps --filter 'name=bulk-block-users' --format '{{.Names}}'")
STOPPED_CONTAINERS=$(ssh Cinnamon "docker ps -a --filter 'name=bulk-block-users' --filter 'status=exited' --format '{{.Names}}'")

echo "✅ Running Containers:"
if [ -z "$RUNNING_CONTAINERS" ]; then
    echo "  - None"
else
    echo "$RUNNING_CONTAINERS" | sed 's/^/  - /'
fi
echo

echo "🔴 Stopped Containers:"
if [ -z "$STOPPED_CONTAINERS" ]; then
    echo "  - None"
else
    echo "$STOPPED_CONTAINERS" | sed 's/^/  - /'
fi
echo

# 2. 停止理由の詳細分析
echo "🔍 STOPPED CONTAINER ANALYSIS"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

if [ -n "$STOPPED_CONTAINERS" ]; then
    for container in $STOPPED_CONTAINERS; do
        echo "📋 Container: $container"
        
        # 終了コード確認
        EXIT_CODE=$(ssh Cinnamon "docker inspect $container --format '{{.State.ExitCode}}'")
        echo "  Exit Code: $EXIT_CODE"
        
        # 停止理由分析
        case $EXIT_CODE in
            0)
                echo "  Status: ✅ NORMAL_COMPLETION"
                echo "  Reason: 正常完了（処理対象ユーザー全て処理済み）"
                ;;
            1)
                echo "  Status: 🔴 ERROR_TERMINATION"
                echo "  Reason: エラーによる強制終了（認証失敗・アカウントロック等）"
                ;;
            *)
                echo "  Status: ⚠️ UNKNOWN_EXIT"
                echo "  Reason: 不明な終了コード"
                ;;
        esac
        
        # 最後のログエントリ確認
        echo "  Last Log Entries:"
        ssh Cinnamon "docker logs --tail 5 $container" | sed 's/^/    /'
        echo
    done
else
    echo "  No stopped containers found"
fi

# 3. 処理完了率の詳細分析
echo "📈 COMPLETION RATE ANALYSIS"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# 各サービスの統計情報を取得
for container in $STOPPED_CONTAINERS $RUNNING_CONTAINERS; do
    if [ -n "$container" ]; then
        echo "📊 Service: $(echo $container | sed 's/bulk-block-users-//' | sed 's/-1$//')"
        
        # 処理統計の抽出
        STATS=$(ssh Cinnamon "docker logs $container" | grep -A 10 "=== 処理統計 ===" | tail -5)
        
        if [ -n "$STATS" ]; then
            echo "$STATS" | sed 's/^/  /'
            
            # 完了率の計算と理由分析
            TOTAL=$(echo "$STATS" | grep "全対象ユーザー" | grep -o '[0-9,]*人' | tr -d ',人' | head -1)
            BLOCKED=$(echo "$STATS" | grep "ブロック済み" | grep -o '[0-9,]*人' | tr -d ',人' | head -1)
            REMAINING=$(echo "$STATS" | grep "残り未処理" | grep -o '[0-9,]*人' | tr -d ',人' | head -1)
            
            if [ -n "$TOTAL" ] && [ -n "$BLOCKED" ] && [ -n "$REMAINING" ]; then
                # 永続的失敗数の取得
                PERMANENT_FAILURES=$(ssh Cinnamon "docker logs $container" | grep "既知の永続的失敗" | wc -l)
                
                # 実質的な処理済み数（ブロック済み + 永続的失敗）
                PROCESSED=$((BLOCKED + PERMANENT_FAILURES))
                
                # 実質完了率の計算
                if [ "$PROCESSED" -ge "$TOTAL" ]; then
                    ACTUAL_COMPLETION_RATE="100.0"
                    EFFECTIVE_REMAINING=0
                else
                    ACTUAL_COMPLETION_RATE=$(echo "scale=1; $PROCESSED * 100 / $TOTAL" | bc)
                    EFFECTIVE_REMAINING=$((TOTAL - PROCESSED))
                fi
                
                echo "  📊 Completion Analysis:"
                echo "    - 実質完了率: ${ACTUAL_COMPLETION_RATE}% (処理済み: ${PROCESSED}/${TOTAL})"
                echo "    - ブロック成功: ${BLOCKED}人"
                echo "    - 永続的失敗: ${PERMANENT_FAILURES}人 (suspended/not_found/deactivated)"
                echo "    - 実質未処理: ${EFFECTIVE_REMAINING}人"
                
                # 完了状況の判定
                if [ "$ACTUAL_COMPLETION_RATE" = "100.0" ]; then
                    echo "    - 🎉 処理状況: 完全完了（100%）"
                    echo "    - 📋 説明: 全ユーザーが処理済み（ブロック成功 + 技術的にブロック不可能）"
                elif [ "$EFFECTIVE_REMAINING" -gt 0 ]; then
                    echo "    - 🔄 処理状況: 継続中 (${EFFECTIVE_REMAINING}人が未処理)"
                    
                    # リトライ候補の確認
                    RETRY_STATUS=$(ssh Cinnamon "docker logs $container" | grep "リトライ候補" | tail -1)
                    if echo "$RETRY_STATUS" | grep -q "リトライ候補はありません"; then
                        echo "    - ⚠️ 注意: リトライ候補なし（要調査）"
                    fi
                fi
            fi
        else
            echo "  ⚠️ No statistics available"
        fi
        echo
    fi
done

# 4. 認証状態の確認
echo "🔐 AUTHENTICATION STATUS"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# 認証エラーの分析
AUTH_ERRORS=$(ssh Cinnamon "docker logs --since '5m' \$(docker ps -aq --filter 'name=bulk-block-users')" 2>/dev/null | grep -i "認証エラー\|authentication\|cookie.*無効" | wc -l)

if [ "$AUTH_ERRORS" -gt 0 ]; then
    echo "⚠️ Authentication issues detected: $AUTH_ERRORS errors in last 5 minutes"
    
    # 認証エラーの詳細
    echo "🔍 Recent Authentication Errors:"
    ssh Cinnamon "docker logs --since '5m' \$(docker ps -aq --filter 'name=bulk-block-users')" 2>/dev/null | \
        grep -i "認証エラー\|authentication\|cookie.*無効" | \
        tail -5 | sed 's/^/  /'
else
    echo "✅ No recent authentication errors"
fi
echo

# 5. 全体的な推奨アクション
echo "💡 RECOMMENDED ACTIONS"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# アクション判定ロジック
IMMEDIATE_ACTIONS=""
MONITORING_ACTIONS=""

# 認証エラーチェック
if [ "$AUTH_ERRORS" -gt 0 ]; then
    IMMEDIATE_ACTIONS="${IMMEDIATE_ACTIONS}\n  - 🔴 認証エラー対応: Cookie更新が必要"
fi

# Exit Code 1のコンテナチェック
ERROR_CONTAINERS=$(ssh Cinnamon "docker ps -a --filter 'name=bulk-block-users' --filter 'exited=1' --format '{{.Names}}'")
if [ -n "$ERROR_CONTAINERS" ]; then
    IMMEDIATE_ACTIONS="${IMMEDIATE_ACTIONS}\n  - 🔴 エラー停止サービス調査: $(echo $ERROR_CONTAINERS | tr '\n' ' ')"
fi

# 正常完了チェック
COMPLETED_CONTAINERS=$(ssh Cinnamon "docker ps -a --filter 'name=bulk-block-users' --filter 'exited=0' --format '{{.Names}}'")
if [ -n "$COMPLETED_CONTAINERS" ]; then
    MONITORING_ACTIONS="${MONITORING_ACTIONS}\n  - ✅ 正常完了サービス: $(echo $COMPLETED_CONTAINERS | tr '\n' ' ')"
fi

# 継続稼働チェック  
if [ -n "$RUNNING_CONTAINERS" ]; then
    MONITORING_ACTIONS="${MONITORING_ACTIONS}\n  - 🔄 継続監視: $(echo $RUNNING_CONTAINERS | tr '\n' ' ')"
fi

# アクション出力
if [ -n "$IMMEDIATE_ACTIONS" ]; then
    echo "🚨 Immediate Actions Required:"
    echo -e "$IMMEDIATE_ACTIONS"
    echo
fi

if [ -n "$MONITORING_ACTIONS" ]; then
    echo "📋 Monitoring Status:"
    echo -e "$MONITORING_ACTIONS"
    echo
fi

# 6. 最終サマリー
echo "📊 SUMMARY"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

TOTAL_CONTAINERS=$(echo "$RUNNING_CONTAINERS $STOPPED_CONTAINERS" | wc -w)
RUNNING_COUNT=$(echo "$RUNNING_CONTAINERS" | wc -w)
STOPPED_COUNT=$(echo "$STOPPED_CONTAINERS" | wc -w)

echo "📈 Container Status Summary:"
echo "  - Total Services: $TOTAL_CONTAINERS"
echo "  - Running: $RUNNING_COUNT"
echo "  - Stopped: $STOPPED_COUNT"

if [ "$AUTH_ERRORS" -gt 0 ] || [ -n "$ERROR_CONTAINERS" ]; then
    echo "🚨 Overall Status: ATTENTION_REQUIRED"
    echo "  - 認証エラーまたはサービス停止が検出されました"
else
    echo "✅ Overall Status: HEALTHY"
    echo "  - システムは正常に動作中または正常完了済みです"
fi

echo
echo "=== CHECK COMPLETE ==="
echo "Next check recommended: $(date -d '+5 minutes' '+%H:%M')"